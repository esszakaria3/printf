i#include "stdio.h"
#include "unistd.h"
#include "stdarg.h"



int _putchar(char c) {
    
    return write(1, &c, 1);
}

int handle_string(const char *str) {
    // Implement this function to handle printing of strings
    // This function should return the number of characters printed.
    // You can use _putchar to print each character in the string.
    // Return the length of the string to indicate the number of characters printed.
    int count = 0;
    while (*str) {
        count += _putchar(*str);
        str++;
    }
    return count;
}

int _printf(const char *format, ...) {
    int count = 0;

    va_list args;
    va_start(args, format);

    if (!format || !format[0])
        return -1;

    while (*format) {
        if (*format == '%') {
            format++;
            if (*format == 'c') {
                char c = va_arg(args, int);
                count += _putchar(c);
            } else if (*format == 's') {
                char *str = va_arg(args, char *);
                count += handle_string(str);
            } else if (*format == '%') {
                _putchar('%');
                count++;
            } else {
                _putchar('%');
                count++;
                if (*format) {
                    _putchar(*format);
                    count++;
                }
            }
        } else {
            _putchar(*format);
            count++;
            format++;
        }
    }

    va_end(args); // Don't forget to end the va_list

    return count;
}

int main() {
    int result = _printf("hello %s %c %%", "world", '\n');
    printf("\nTotal characters printed: %d\n", result);
    return 0;
}

